using System;

namespace <%= unity3dAppName %>GUI.Data.Entities
{
  [Serializable]
  public class <%= persistClass %>
  {
    <%_ for (const field of fields.filter(field => !field.transient && (embedded || !field.id || !primaryKey.composite))) { _%>
      <%_ if (typeof field.javadoc !== 'undefined') { _%>
    <%- formatAsFieldJavadoc(field.javadoc) %>
      <%_ } _%>
      <%_ if (!dtoMapstruct && typeof field.javadoc !== 'undefined') { _%>
        @Schema(description = "<%- formatAsApiDescription(field.javadoc) %>"<% if (field.fieldValidationRequired) { %>, required = true<% } %>)
      <%_ } _%>
        public <%= field.javaFieldType %> <%= field.fieldName %>  { get; set; }
    
      <%_ if (field.fieldWithContentType) { _%>
        public string <%= field.fieldName %>ContentType  { get; set; }
    
      <%_ } _%>
    <%_ } _%>

    public override string ToString(){
      return UnityEngine.JsonUtility.ToJson (this, true);
    }
  }
}
